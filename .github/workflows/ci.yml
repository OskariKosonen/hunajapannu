name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
        
    - name: Run linting
      run: |
        cd frontend && npm run lint --if-present
        cd ../backend && npm run lint --if-present
        
    - name: Run tests
      run: npm run test
      env:
        CI: true
        
    - name: Build applications
      run: npm run build
      
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/build/
        
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        npm audit --audit-level high
        cd frontend && npm audit --audit-level high
        cd ../backend && npm audit --audit-level high
        
  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker images
      run: |
        # Build backend image
        docker build -t cowrie-analytics-backend ./backend
        
        # Build frontend image  
        docker build -t cowrie-analytics-frontend ./frontend
        
    - name: Test Docker containers
      run: |
        # Test that containers start successfully
        docker run --rm -d --name backend-test -p 3001:3001 cowrie-analytics-backend
        sleep 10
        docker stop backend-test || true
        
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:all
      
    - name: Run code quality checks
      run: |
        # Check for TypeScript errors
        cd frontend && npx tsc --noEmit
        
        # Check for unused dependencies
        npx depcheck --ignores="@types/*,eslint-*"
